
const shift = (k) => `S(${k})`;
const opt = (k) => `A(${k})`;
const cmd = (k) => `G(${k})`;
const layerTap = (layer, tap) => `LT(${layer}, ${tap})`;
const toggleLayer = (layer) => `TG(${layer})`;
const sendString = (sendString) => ({ type: 'pressed', c: `SEND_STRING(${sendString})` });
const tapCodes = (chars) => ({ type: 'pressed', c: chars.map(char => 'tap_code16(' + char + ');\n')})

const basic = {
    ...['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','1','2','3','4','5','6','7','8','9','0',
    'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'f10', 'f11', 'f12'].reduce((obj, char) => ({
        ...obj,
        [char]: `KC_${char.toLocaleUpperCase()}`,
        [char.toLocaleUpperCase()]: `KC_${char.toLocaleUpperCase()}`,
    }), {}),
}
const swedish = {
    ...basic,
    '√•': 'KC_LBRC',
    '√Ö': 'KC_LBRC',
    '√§': 'KC_QUOT',
    '√Ñ': 'KC_QUOT',
    '√∂': 'KC_SCLN',
    '√ñ': 'KC_SCLN',
    '¬ß': 'KC_NUBS',
    '<': 'KC_GRV',
    '>': 'S(KC_GRV)',
    "'": 'KC_NUHS',
    '¬®': 'KC_RBRC',
    '¬¥': 'KC_EQL',
    '`': 'S(KC_EQL)',
    '+': 'KC_MINS',
    '-': 'KC_SLSH',
    '(': 'S(KC_8)',
    ')': 'S(KC_9)',
    '{': 'S(A(KC_8))',
    '}': 'S(A(KC_9))',
    '[': 'A(KC_8)',
    ']': 'A(KC_9)',
    '@': 'A(KC_2)',
    '$': 'A(KC_4)',
    '*': 'S(KC_NUHS)',
    '~': 'A(KC_RBRC)',
    ':': 'S(KC_DOT)',
    '=': 'S(KC_0)',
    '/': 'S(KC_7)',
    '|': 'A(KC_7)',
    '\\': 'S(A(KC_7))',
    '?': 'S(KC_MINS)',
    ',': 'KC_COMM',
};

const Layer = {
    Qwerty: 0,
    Symbol: 1,
    Navigation: 2,
    Numpad: 3,
}

const qwerty = {
    layer: Layer.Qwerty,
    keys: {
        ...swedish,
        '‚á•': layerTap(Layer.Numpad, 'KC_TAB'),
        'üìù': cmd('KC_NUBS'),
        '‚êõ': 'KC_ESC',
        '‚å¶': 'KC_DEL',
        '‚å´': 'KC_BSPC',
        'L‚¨Ü': 'KC_LSFT',
        'üß≠': toggleLayer(Layer.Navigation),
        'üÜô': 'KC_CAPS',
        '‚¨ÜR': 'KC_RSFT',
        '^' :'KC_LCTRL',
        '<' :swedish["<"],
        '>': shift(swedish["<"]),
        '‚å•': 'LALT_T(KC_DOT)',
        'L‚åò': 'KC_LCMD',
        '_': layerTap(Layer.Navigation, 'KC_SPC'),
        '‚Ü©': layerTap(Layer.Symbol, 'KC_ENT'),
        '‚åòR': 'KC_RCMD',
        '‚¨ÖÔ∏è': 'RALT_T(KC_LEFT)',
        '‚¨áÔ∏èÔ∏è': 'KC_DOWN',
        '‚¨ÜÔ∏è': 'KC_UP',
        '‚û°Ô∏è': 'RCTL_T(KC_RIGHT)',
        '?Ô∏è': 'KC_TRNS',
    },
    map: `
        ' 1 2 3 4 5              6 7 8 9 0 +
        ‚á• q w e r t üìù         üìù y u i o p √•
       ‚êõ a s d f g ‚å¶          ‚å´  h j k l √∂ √§
      L‚¨Ü z x c v b  ? üÜô    ~ / n m , . - ‚¨ÜR
       Ôºæ < > ‚å•  L‚åò  _ ‚Ü©     ‚Ü© _ ‚åòR ‚¨ÖÔ∏è ‚¨áÔ∏è ‚¨ÜÔ∏è ‚û°Ô∏è`
}

const symbol = {
    layer: Layer.Symbol,
    keys: {
        ...swedish,
        "'": tapCodes([swedish['`'], 'KC_SPC']),
        '_': 'KC_TRNS',
        '‚å´': 'G(KC_BSPC)',
        '=>': tapCodes([swedish['='], swedish['>'], 'KC_SPC']),
        "'''": tapCodes([swedish['`'], 'KC_SPC', swedish['`'], 'KC_SPC', swedish['`'], 'KC_SPC']),
        '-[]': tapCodes([swedish['-'], 'KC_SPC', swedish['['], 'KC_SPC', swedish[']'], 'KC_SPC']),
        '$()': tapCodes([swedish['$'], swedish['('], swedish[')']]),
        '‚åòZ': 'G(Z)',
        '‚åòX': 'G(X)',
        '‚åòC': 'G(C)',
        '‚åòV': 'G(V)',
    },
    map: `
        ' f1 f2 f3 f4 f5              f6   f7 f8 f9 f10 f11
      ''' (  {  [  <  _  _         _  ===  >  ]  }  )   f12
      -[] @  $  *  ~  :  _         ‚å´  =    /  |  \  ?   => 
      $() ‚åòZ ‚åòX ‚åòC ‚åòV _  _ _     _ _  _    _  _  _  _   _
        _ _  _  _    _   _ _     _ _     _    _  _  _   _`
}

const nav = {
    layer: Layer.Navigation,
    keys: {
        ...swedish,
        '‚å´': 'G(KC_BSPC)',
        '‚è™': 'A(KC_LEFT)',
        '‚è´': 'KC_PGUP',
        '‚è¨': 'KC_PGDN',
        '‚è©': 'A(KC_RIGHT)',
        '‚¨ÖÔ∏è': 'KC_LEFT',
        '‚¨áÔ∏è': 'KC_DOWN',
        '‚¨ÜÔ∏è': 'KC_UP',
        '‚û°Ô∏è ': 'KC_RIGHT',
        '‚åòZ': 'G(Z)',
        '‚åòX': 'G(X)',
        '‚åòC': 'G(C)',
        '‚åòV': 'G(V)',
    },
    map: `
        _ f1 f2 f3 f4 f5              f6 f7 f8 f9 f10 ¬¥
        _ (  {  [  <  _  _         _  _  ‚è™ ‚è´  ‚è¨  ‚è© ¬®
        _ @  $  *  ~  :  _         ‚å´  =  ‚¨ÖÔ∏è ‚¨áÔ∏è  ‚¨ÜÔ∏è  ‚û°Ô∏è _ 
        _ ‚åòZ ‚åòX ‚åòC ‚åòV _  _ _     _ _  _  _  _  _  _   _
        _ _  _  _    _   _ _     _ _   _    _  _  _   _`
}

const num = {
    layer: Layer.Numpad,
    keys: {
        ...swedish,
        '‚èÆ': 'KC_MPRV',
        '‚è≠': 'KC_MNXT',
        'üîä': 'KC_VOLU',
        'üîâ': 'KC_VOLD',
        'üîá': 'KC_MUTE',
        '‚èØ': 'KC_MPLY',
        'E': sendString('engagement'),
    },
    map: `
        _ _ _ _ ‚èÆ ‚è≠             _ _ _ _ _ _
        _ _ _ E _ _ üîä         üîá _ 7 8 9 - _
        _ _ _ _ _ _ üîâ         ‚èØ _ 4 5 6 + _ 
        _ _ _ _ _ _ _ _      _ _ _ 1 2 3 ‚Ü© _
        _ _ _ _  _  _ _      _ _  0  _ , _ _Ô∏è`
}